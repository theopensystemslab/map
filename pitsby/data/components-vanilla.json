[{"name":"AddressAutocomplete","description":"AddressAutocomplete is a Lit wrapper for the Gov.UK accessible-autocomplete component that fetches & displays addresses in a given postcode using the Ordnance Survey Places API.","properties":[{"name":"postcode","type":"String","values":"SE5 0HU (default), any UK postcode","required":true},{"name":"initialAddress","type":"String","values":"\"\" (default)"},{"name":"label","type":"String","values":"Select an address (default)"},{"name":"arrowStyle","type":"String","values":"default (default), light"},{"name":"labelStyle","type":"String","values":"responsive (default), static"},{"name":"id","type":"String","values":"autocomplete (default)"},{"name":"osPlacesApiKey","type":"String","values":"https://osdatahub.os.uk/plans","required":true}],"methods":[{"name":"ready","params":[{"name":"ready","type":"Event Listener","values":"detail","description":"Dispatches the number of addresses fetched from the OS Places API for a given `postcode` when the component is connected to the DOM, before initial render"}]},{"name":"addressSelection","params":[{"name":"addressSelection","type":"Event Listener","values":"detail","description":"Dispatches the OS Places API record for an individual address when it's selected from the dropdown"}]}],"examples":[{"title":"Select an address in postcode SE19 1NT","description":"Standard case","template":"<address-autocomplete postcode=\"SE19 1NT\" osPlacesApiKey=undefined />","controller":"function (document) {\n        const autocomplete = document.querySelector(\"address-autocomplete\");\n\n        autocomplete.addEventListener(\"ready\", ({ detail: data }) => {\n          console.debug(\"autocomplete ready\", { data });\n        });\n        \n        autocomplete.addEventListener(\"addressSelection\", ({ detail: address }) => {\n          console.debug({ detail: address });\n        });\n      }"}],"id":"addressautocomplete"},{"name":"MyMap - Basic","description":"MyMap is an OpenLayers-powered Lit web component map for tasks related to planning permission in the UK. These examples cover the foundational properties used to render and style the map.","properties":[{"name":"latitude","type":"Number (EPSG:4326)","values":"51.507351 (default)","required":true},{"name":"longitude","type":"Number (EPSG:4326)","values":"-0.127758 (default)","required":true},{"name":"zoom","type":"Number","values":"10 (default)","required":true},{"name":"minZoom","type":"Number","values":"7 (default)"},{"name":"maxZoom","type":"Number","values":"22 (default)"},{"name":"hideResetControl","type":"Boolean","values":"false (default)"},{"name":"staticMode","type":"Boolean","values":"false (default)"},{"name":"showScale","type":"Boolean","values":"false (default)"},{"name":"useScaleBarStyle","type":"Boolean","values":"false (default)"},{"name":"id","type":"String","values":"map (default)"},{"name":"ariaLabel","type":"String","values":"An interactive map (default)"},{"name":"disableVectorTiles","type":"Boolean","values":"false (default)"},{"name":"osCopyright","type":"String","values":"Â© Crown copyright and database rights 2022 OS (0)100024857 (default)"},{"name":"osVectorTileApiKey","type":"String","values":"https://osdatahub.os.uk/plans"}],"examples":[{"title":"Basemap: Ordnance Survey vector tiles","description":"Requires access to the Ordnance Survey Vector Tiles API, fallsback to OpenStreetMap basemap if no key is provided.","template":"<my-map zoom=\"18\" osVectorTilesApiKey=\"\" />"},{"title":"Basemap: Ordnance Survey raster tiles","description":"Requires access to the Ordnance Survey Maps API, fallsback to OpenStreetMap basemap if no key provided.","template":"<my-map zoom=\"18\" osVectorTilesApiKey=\"\" disableVectorTiles />"},{"title":"Display a static map","description":"Disable zooming, panning, and other map interactions. Hide the reset control button.","template":"\n        <my-map\n          zoom=\"20\"\n          staticMode\n          hideResetControl\n          osVectorTilesApiKey=\"\" />"},{"title":"Display a scale bar on the map","description":"Display a scale bar on the map for orientation, choose between the default or \"bar\" styles offered by OpenLayers","template":"\n        <my-map\n          zoom=\"20\"\n          showScale\n          useScaleBarStyle\n          osVectorTilesApiKey=\"\" />"}],"id":"mymap---basic"},{"name":"MyMap - Drawing","description":"Drawing mode enables drawing and modifying a shape on the map. Snapping points display for guidance at zoom level 20+ when the vector tile basemap is enabled. One polygon can be drawn at a time. The reset control button will erase your drawing and re-center the map view.","properties":[{"name":"drawMode","type":"Boolean","values":"false (default)"},{"name":"drawPointer","type":"String","values":"crosshair (default), dot"},{"name":"drawGeojsonData","type":"GeoJSON Feature","values":"\n      {\n        type: \"Feature\",\n        geometry: {},\n      } \n      (default)"},{"name":"drawGeojsonBuffer","type":"Number","values":"100 (default)"},{"name":"areaUnits","type":"String","values":"m2 (default), ha"},{"name":"osVectorTileApiKey","type":"String","values":"https://osdatahub.os.uk/plans"}],"examples":[{"title":"Draw mode","description":"Draw and modify a site plan boundary with a red line. Start at zoom 20 so snaps are visible on initial load.","template":"\n        <my-map \n          id=\"draw-mode\"\n          zoom=\"20\" \n          maxZoom=\"23\" \n          drawMode \n          drawPointer=\"dot\"\n          osVectorTilesApiKey=\"\" />"},{"title":"Load an initial shape onto the drawing canvas","description":"Load a polygon with the ability to continue modifying it. Click 'reset' to erase and draw fresh.","controller":"function (element) {\n        const map = element.querySelector(\"my-map\");\n        map.drawGeojsonData = {\n          type: \"Feature\",\n          properties: {},\n          geometry: {\n            type: \"Polygon\",\n            coordinates: [\n              [\n                [-0.07666435775970835, 51.48432362355473],\n                [-0.07670012065571297, 51.48419742371502],\n                [-0.07630374962243747, 51.484158450222964],\n                [-0.07627692753228853, 51.484288361835524],\n                [-0.07666435775970835, 51.48432362355473],\n              ],\n            ],\n          },\n        };\n      }","template":"\n        <my-map \n          id=\"draw-mode-1\"\n          zoom=\"20\" \n          maxZoom=\"23\" \n          drawMode \n          drawPointer=\"dot\"\n          osVectorTilesApiKey=\"\" />"},{"title":"Calculate the area of the drawn polygon","description":"Listen for an event when the drawn polygon is closed or modified. Specify if you want to calculate area in square metres or hectares.","controller":"function (element) {\n        const map = element.querySelector(\"my-map\");\n        map.addEventListener(\"areaChange\", ({ detail: area }) => {\n          console.debug({ area });\n        });\n      }","template":"\n        <my-map \n          id=\"draw-mode-2\"\n          zoom=\"19\" \n          maxZoom=\"23\" \n          drawMode \n          areaUnits=\"ha\" \n          osVectorTilesApiKey=\"\" />"},{"title":"Get the GeoJSON representation of the drawn polygon","description":"Listen for an event when the drawn polygon is closed or modified.","controller":"function (element) {\n        const map = element.querySelector(\"my-map\");\n        map.addEventListener(\"geojsonChange\", ({ detail: geojson }) => {\n          console.debug({ geojson });\n        });\n      }","template":"\n        <my-map \n          id=\"draw-mode-3\"\n          zoom=\"19\" \n          maxZoom=\"23\" \n          drawMode \n          osVectorTilesApiKey=\"\" />"}],"id":"mymap---drawing"},{"name":"MyMap - Features","description":"Features mode queries the Ordnance Survey Features API for any features that intersect the center point of the map. Should be used with the vector tiles basemap.","properties":[{"name":"showFeaturesAtPoint","type":"Boolean","values":"false (default)"},{"name":"clickFeatures","type":"Boolean","values":"false (default)"},{"name":"featureColor","type":"String","values":""},{"name":"featureFill","type":"Boolean","values":"false (default)"},{"name":"featureBuffer","type":"Number","values":"40"},{"name":"osFeaturesApiKey","type":"String","values":"https://osdatahub.os.uk/plans"},{"name":"osVectorTileApiKey","type":"String","values":"https://osdatahub.os.uk/plans"}],"examples":[{"title":"Show features at point","description":"Show the Ordnance Survey Feature(s) that intersects with a given point.","template":"\n        <my-map\n          showFeaturesAtPoint\n          latitude=\"51.4858363\"\n          longitude=\"-0.0761246\"\n          featureColor=\"#8a2be2\" \n          osFeaturesApiKey=\"\" \n          osVectorTilesApiKey=\"\" />"},{"title":"Click to select and merge features","description":"Show features at point plus ability to click to select or deselect additional features to create a more accurate full site boundary.","template":"\n        <my-map\n          showFeaturesAtPoint\n          clickFeatures\n          latitude=\"51.4854329\"\n          longitude=\"-0.0761992\"\n          featureColor=\"Magenta\" \n          osFeaturesApiKey=\"\" \n          osVectorTilesApiKey=\"\" />"}],"id":"mymap---features"},{"name":"MyMap - GeoJSON","description":"GeoJSON mode displays a static polygon on the map. The map view will center on the shape, overriding the latitude, longitude, and zoom properties. Use the geojsonBuffer property to control the padding between the shape and edge of the map view.","properties":[{"name":"geojsonData","type":"GeoJSON FeatureCollection or Feature","values":"\n      {\n        type: \"FeatureCollection\",\n        features: [],\n      }\n      (default)\n      "},{"name":"geojsonColor","type":"String","values":"#ff0000 (default)"},{"name":"geojsonFill","type":"Boolean","values":"false (default)"},{"name":"geojsonBuffer","type":"Number","values":"12"}],"examples":[{"title":"Show a GeoJSON polygon on a static map","description":"Show a custom GeoJSON polygon on an OS basemap. Hide the zoom & reset control buttons.","controller":"function (element) {\n        const map = element.querySelector(\"my-map\");\n        map.geojsonData = {\n          type: \"Feature\",\n          properties: {},\n          geometry: {\n            type: \"Polygon\",\n            coordinates: [\n              [\n                [-0.11562466621398924, 51.50746034612789],\n                [-0.11449813842773436, 51.50617151942102],\n                [-0.11359691619873047, 51.50653212745768],\n                [-0.11348962783813477, 51.50645199258505],\n                [-0.1127493381500244, 51.50665900738443],\n                [-0.11383295059204103, 51.507907754128546],\n                [-0.11562466621398924, 51.50746034612789],\n              ],\n            ],\n          },\n        };\n      }","template":"\n        <my-map\n          geojsonColor=\"#ff0000\"\n          geojsonBuffer=\"10\"\n          hideResetControl\n          staticMode \n          osVectorTilesApiKey=\"\" />"}],"id":"mymap---geojson"},{"name":"PostcodeSearch","description":"PostcodeSearch is a Lit-wrapped, Gov.UK-styled text input that formats and validates UK postcodes using the npm package 'postcode'.","properties":[{"name":"label","type":"String","values":"Postcode (default)"},{"name":"hintText","type":"String","values":"\"\" (default)"},{"name":"errorMessage","type":"String","values":"Enter a valid UK postcode (default)"},{"name":"onlyQuestionOnPage","type":"Boolean","values":"false (default), true if the label should be an <h1>"},{"name":"id","type":"String","values":"postcode (default)"},{"name":"errorId","type":"String","values":"postcode-error (default)"}],"methods":[{"name":"postcodeChange","params":[{"name":"postcodeChange","type":"Event Listener","values":"detail","description":"Dispatches on input change; returns the formatted input string and `true` if the input is a valid postcode"}]}],"examples":[{"title":"Enter a UK postcode","description":"Standard case","template":"<postcode-search />","controller":"function (document) {\n        const input = document.querySelector(\"postcode-search\");\n        \n        input.addEventListener(\"postcodeChange\", ({ detail }) => {\n          console.debug({ detail });\n        });\n      }"}],"id":"postcodesearch"}]